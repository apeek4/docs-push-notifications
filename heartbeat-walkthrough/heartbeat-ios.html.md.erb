---
title: Configuring Heartbeat Monitor for iOS
owner: push notification service
---

## <a id="before"></a> Prerequisites
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#before" class="subnav" style="display: none;">Prerequisites
</a>

To configure the Heartbeat Monitor app for iOS, you must have:

* an iOS 8+ device
* the latest Xcode supporting Swift 2.2 installed on your workstation
* an Apple Developer account

## <a id="request-ios-cert"></a> Request an iOS Development Certificate
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#request-ios-cert" class="subnav" style="display: none;">Request an iOS Development Certificate
</a>

1. Navigate to [Apple's Devloper Portal](https://developer.apple.com/account/ios/certificate) and select the **Certificates, Identifiers & Profiles** section. 

1. In the sidebar, select **All** under the **Certificates** header. 

1. Click the + button on the top right.

	![iOS Certs 1](images/iOSCerts/01.png) 

1. Select **iOS App Development** and continue. 

	![iOS Certs 2](images/iOSCerts/02.png)

1. Launch the Keychain Access application on your machine. 

1. In the top navbar, select **Keychain Acess** > **Certificate Assistant** > **Request a Certificate from a Certificate Authority**. 

	![dropdown](images/iOSCerts/k01.png)

1. Enter the information required and check the **Saved to disk** option. 

1. Click continue and save the certificate request when prompted. 

	![save request](images/iOSCerts/k02.png)

1. Back in the Apple Portal, continue past the CSR Request instructions and upload the new `.csr` file you've created. 

1. Click **Continue** and generate the new certificate. 

	![generate cert](images/iOSCerts/03.png)

	![upload csr](images/iOSCerts/06.png)

1. Click **Download** and open your shiny new certificate.

	![download cert](images/iOSCerts/07.png)

	![open cert](images/iOSCerts/k03.png)

## <a id="request-apns-cert"></a> Request an APNS Certificate
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#request-apns-cert" class="subnav" style="display: none;">Request an APNS Development Certificate
</a>

### Create an App ID

1. Navigate to Apple's Devloper Portal(https://developer.apple.com/account/ios/certificate) and select the **Certificates, Identifiers & Profiles** section. 

1. In the sidebar, select **App IDs** under the **Identifiers** header. Then click on the **+** button in the top right.

	![APNS Certs 1](images/APNSCerts/01.png)

1. Enter an **App ID Description** and a **Bundle ID**.

	![APNS Certs 2](images/APNSCerts/02.png)

1. Enable the **Push Notifications** App Service and click **Continue**.

	![APNS Certs 3](images/APNSCerts/03.png)

1. Then click **Register**.

	![APNS Certs 4](images/APNSCerts/04.png)

### Create an APNS Certificate

1. Now in the **App IDs** list, find and select the App ID you've registered. Then click **Edit**

	![APNS Certs 5](images/APNSCerts/05.png)

1. Under the **Push Notifications** section, decide whether you need a **Development SSL Certificate** or a **Production SSL Certificate** and click the corresponding **Create Certificate** button.

	![APNS Certs 6](images/APNSCerts/06.png)

1. Now we are going to follow the same process we did for requesting a **iOS Development Certificate**. Continue past the CSR Request instructions and upload the same **.csr** file you created earlier. Click **Continue** and generate the new certificate.

	![iOS Certs 3](images/iOSCerts/03.png)
	![iOS Certs 6](images/iOSCerts/06.png)

1. Click **Download** and open your shiny new certificate.

1. In **Keychain Access**, select both your **Apple Development iOS Push Services** certificate and the private key it was signed with.

	![APNS Certs 7](images/APNSCerts/07.png)

1. Right click, select **Export 2 Items...** and save the **.p12** file somewhere you will remember. You will need to upload this certificate to the Push Dashboard later.

	![APNS Certs 8](images/APNSCerts/08.png)

## <a id="create-provisioning-profile"></a> Create a Provisioning Profile
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#create-provisioning-profile" class="subnav" style="display: none;">Create a Provisioning Profile
</a>

### Register a Device

*You need an iOS 8+ Device to use Heartbeat Monitor. If you have already have an iOS 8+ Device registered, you can skip to the next step.*

1. Navigate to [Apple's Developer Portal](https://developer.apple.com/account/ios/device/) and select the **Certificates, Identifiers & Profiles** section.

1. In the sidebar, select **All** under the **Devices** header. Then click on the **+** button in the top right.

	![Provisioning 1](images/Provisioning/01.png)

1. In order to register your device, you will need the **UUID** of the device. To get it, connect your device to your computer, open **iTunes**, and navigate to the device tab.

	![Provisioning 2](images/Provisioning/02.png)

1. Click the **Serial Number** of the device. and it should change to reveal the UUID. Right click the field to copy it. 

	![Provisioning 3](images/Provisioning/03.png)

1. In your web browser, enter a device name and paste the **UUID** into its field. Then click **Register**. 

### Keychain Access

1. Launch the **Keychain Access** application. 

1. In the top navbar, select **Keychain Access** > **Certificate Assistant** > **Request a Certificate from a Certificate Authority**. 

	![Request from authority](images/iOSCerts/k01.png)

1. Enter the information required and check the **Saved to disk** option. 

1. Click **continue** and save the certificate request when prompted. 

	![Save request](images/iOSCerts/k02.png)

### Upload Certificate

1. In your browser, continue past the CSR instructions and upload the new `.csr` file you created. 

1. Click **Continue** and generate the new certificate.

	![Continue](images/iOSCerts/03.png)
	![Generate Cert](images/iOSCerts/06.png)

1. Click **Download** and open your shiny new certificate.

	![Download](images/iOSCerts/07.png)
	![Open](images/iOSCerts/k03.png)

## <a id="push-config"></a> Configure your Push Dashboard
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#push-config" class="subnav" style="display: none;">Configure your Push Dashboard
</a>

You can navigate to the Push Dashboard in one of two ways:
* Apps Manager
* cf CLI

### Push Dashboard via Apps Manager

In order to use the Apps Manager, the "Push Apps Manager" errand must have been enabled when deploying Pivotal Elastic Runtime. If this is not the case, use the CF CLI method.

Apps manager can be accessed by going toapps.[your-domain-name].com. Then navigate to the system org and the push-notifications space and select the Services tab.

Then select the PCF Push Notification Service row and click the Manage link.

### Push Dashboard via cf CLI

You can download the CF CLI from Github.

Login to your CF environment using the cf login command and target the system org and the push-notifications space:

cf target -o system -s push-notifications
Then you can access the URL for your Push Dashboard using the `cf service` command:

cf service push-service-instance

### Configuring the Platform

Now in the Push Dashboard, select the Heartbeat App from your list of applications and select the Configuration tab.

Under the Platforms section, find the row named Heartbeat iOS Platform and edit it by clicking the pencil icon.

Remember that APNS Certificate .p12 that you generated? Press the Choose File button and upload that file!

Then just enter the password you used to export the certificate and click Save.


## <a id="connect"></a> Connect your App
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#connect" class="subnav" style="display: none;">Connect your App
</a>

### Download the Git Repo

Navigate to the Push iOS Heartbeat Monitor repository and clone it.

git clone git@github.com:cfmobile/push-ios-heartbeatmonitor.git
Navigate to the push-ios-heartbeatmonitor/heartbeat folder and open the PCF Push Heartbeat Monitor.xcodeproj file. (Through terminal or xcode)

### Configure your App

In the Project Navigator (the sidebar), select the Pivotal.plist file. In the editor, change the value for pivotal.push.serviceUrl to your environment's push api endpoint.

You should not need to, but double check that the Platform UUID and Platform Secret fields match those of the iOS Platform found in the Configuration tab of your Push Dashboard.


You can determine this by looking at the route for your push-api CF App.

### Configure the Platform

Now in the Push Dashboard, select the Heartbeat App from your list of applications and select the Configuration tab.


Under the Platforms section, find the row named Heartbeat iOS Platform and edit it by clicking the pencil icon.


Remember that APNS Certificate .p12 that you generated? Press the Choose File button and upload that file!


Then just enter the password you used to export the certificate and click Save.

## <a id="run"></a> Run the App on your Device
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#run" class="subnav" style="display: none;">Run the App on your Device
</a>

1. Navigate to **Accounts** > **View Details** > **Provisioning Profiles**. 

1. Under **Preferences**, choose your apple ID and Download the one you created. 

1. In the git repo, there is a pod file. Run pod install. If you need to get cocopods, search for cocopods installation in your browser. 

1. In xcode, specify the app and device and build. Resolve any errors. 

1. After the build succeeds, run the app and it shows up on your device. Confirm that it works by. 

