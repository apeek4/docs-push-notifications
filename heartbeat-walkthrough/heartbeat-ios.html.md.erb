---
title: Configuring Heartbeat Monitor for iOS
owner: push notification service
---

## <a id="before"></a> Prerequisites
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#before" class="subnav" style="display: none;">Prerequisites
</a>

To configure the Heartbeat Monitor app for iOS, you must have the following:

* An iOS 8+ device
* The latest Xcode supporting Swift 2.2 installed on your workstation
* An Apple Developer account

## <a id="request-ios-cert"></a> Request an iOS Development Certificate
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#request-ios-cert" class="subnav" style="display: none;">Request an iOS Development Certificate
</a>

1. Navigate to the [Apple Devloper Portal](https://developer.apple.com/account/ios/certificate) and select the **Certificates, Identifiers & Profiles** section. 

1. In the sidebar, select **All** under the **Certificates** header. 

1. Click the **+** button on the top right.

	![iOS Certs 1](images/iOSCerts/01.png) 

1. Select **iOS App Development** and click **Continue**. 

	![iOS Certs 2](images/iOSCerts/02.png)

1. Launch the Keychain Access application on your machine. 

1. In the top navbar, select **Keychain Acess** > **Certificate Assistant** > **Request a Certificate from a Certificate Authority**. 

	![dropdown](images/iOSCerts/k01.png)

1. Enter your **User Email Address** and **Common Name**, and select the **Saved to disk** option. 

1. Click **Continue** and save the certificate request when prompted. 

	![save request](images/iOSCerts/k02.png)

1. In the Apple Developer Portal, continue past the CSR Request instructions and upload the new `.csr` file you created. 

	![upload csr](images/iOSCerts/06.png)

1. Click **Continue** and generate the new certificate. 

1. Click **Download**.

	![download cert](images/iOSCerts/07.png)

1. Open your certificate and import it to Keychain Access.

## <a id="request-apns-cert"></a> Request an APNS Certificate
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#request-apns-cert" class="subnav" style="display: none;">Request an APNS Development Certificate
</a>

### Create an App ID

1. In the sidebar, select **App IDs** under the **Identifiers** header. 
	1. Click the **+** button to add an App ID.

	![APNS Certs 1](images/APNSCerts/01.png)

1. Enter an **App ID Description** and a **Bundle ID**.

	![APNS Certs 2](images/APNSCerts/02.png)

1. Select the the **Push Notifications** checkbox and click **Continue**.

	![APNS Certs 3](images/APNSCerts/03.png)

1. Click **Register**.

	![APNS Certs 4](images/APNSCerts/04.png)

### Create an APNS Certificate

1. In the **App IDs** list, select the App ID you registered and click **Edit**

	![APNS Certs 5](images/APNSCerts/05.png)

1. Under the **Push Notifications** section, choose either **Development SSL Certificate** and click the corresponding **Create Certificate** button.

	![APNS Certs 6](images/APNSCerts/06.png)

1. Continue past the CSR Request instructions and upload the same **.csr** file you created earlier. 

1. Click **Continue** and generate the new certificate.

	![iOS Certs 6](images/iOSCerts/06.png)

1. Click **Download**.

1. Open your certificate and import it to Keychain Access.

1. In **Keychain Access**, select both your **Apple Development iOS Push Services** certificate and the private key it was signed with.

	![APNS Certs 7](images/APNSCerts/07.png)

1. Right click your selection and choose **Export 2 Items...** 
	1. Save the **.p12** file for uploading to the Push Dashboard in a later step.

	![APNS Certs 8](images/APNSCerts/08.png)

## <a id="create-provisioning-profile"></a> Create a Provisioning Profile
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#create-provisioning-profile" class="subnav" style="display: none;">Create a Provisioning Profile
</a>

### Register a Device

<p class="note"><strong>Note</strong>: You need an iOS 8+ Device to use Heartbeat Monitor. If you have already have an iOS 8+ Device registered, skip to the next step.</p>

1. In the sidebar, select **All** under the **Devices** header. 
	1. Click on the **+** button in the top right.

	![Provisioning 1](images/Provisioning/01.png)

1. Retrieve the **UDID** of the device: 
	1. Connect your device to your computer.
	1. Open **iTunes**. 
	1. Select the device tab.

	![Provisioning 2](images/Provisioning/02.png)

1. Click the **Serial Number** of the device to reveal the UDID. 
	1. Right click the field to copy it. 

	![Provisioning 3](images/Provisioning/03.png)

1. In the Apple Developer Portal, enter a device name and paste the **UDID** into its field. 

1. Click **Register**. 

### Create a Profile

1. Navigate to the [Apple Devloper Portal](https://developer.apple.com/account/ios/certificate) and select the **Certificates, Identifiers & Profiles** section. 

1. In the sidebar, select **All** under the **Provisioning Profiles** header. 
	1. Click on the **+** button in the top right.

1. Choose a provisioning profile type. You will likely want either the **iOS App Development** or **In House Distribution** provisioning profiles. 
	1. Click **Continue**.

1. Select the **Heartbeat App ID** from the dropdown list and click **Continue**.

1. Select the **Developer Certificate(s)** that you want to use and click **Continue**.

1. Select the **Devices** that you want to use and click **Continue**.

1. Provide a descriptive name for the **Provisioning Profile** and click **Continue**.

1. Click **Download** and open your **Provisioning Profile**. 

## <a id="push-config"></a> Configure your Push Dashboard
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#push-config" class="subnav" style="display: none;">Configure your Push Dashboard
</a>

Navigate to the Push Dashboard in one of the following ways:
	
<p class="note"><strong>Note</strong>: Use the cf CLI instructions if you did not enable the <b>Push Apps Manager</b> errand when deploying Elastic Runtime.</p>

* Apps Manager
* cf CLI

### Navigate to Push Dashboard using Apps Manager

1. In a browser, navigate to Apps `apps.YOUR-SYSTEM-DOMAIN` in a browser.

1. Select the **system** org and the **push-notifications** space.

1. Click the **Services** tab.

1. Select the **PCF Push Notification Service** row and click the **Manage** link.

### Navigate to Push Dashboard using cf CLI

1. Open a terminal window and log in:

	<pre class="terminal">$ cf login -a https://api.YOUR-SYSTEM-DOMAIN -u USERNAME -p PASSWORD</pre>

1. Target the correct org and space: 

	<pre class="terminal">$ cf target -o system -s push-notifications</pre>

1. Run the following command:

	<pre class="terminal">$ cf service push-service-instance</pre>

1. Copy the URL from the **Dashboard** field and paste it into your browser.


### Configure the Push Notifications Service

1. Select the **Heartbeat App** from the list of applications. 
	1. Select the **Configuration** tab.

1. Under the Platforms section, in the **Heartbeat iOS Platform** row, click pencil icon to edit.

1. Click **Choose File** and upload the APNS certificate you created.

1. Enter the password you used to export the certificate and click **Save**.


## <a id="connect"></a> Connect your App
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#connect" class="subnav" style="display: none;">Connect your App
</a>

### Download the Git Repo

1. Clone the Push iOS Heartbeat Monitor repository:

	<pre class="terminal">$ git clone git@github.com:cfmobile/push-ios-heartbeatmonitor.git</pre>

1. Run the following command to open the xcode project:

	<pre class="terminal">$ open PCF\ Push\ Heartbeat\ Monitor.xcodeproj/</pre>

### Configure your App

1. In the Project Navigator, select the `Pivotal.plist` file. In the editor, do the following:
	1. Change the value for `pivotal.push.serviceUrl` to the push api endpoint for your environment: `https://push-api.YOUR-SYSTEM-DOMAIN`.

1. Ensure that the **Platform UDID** and **Platform Secret** fields match those of the iOS Platform found in the **Configuration** tab of your Push Dashboard.

1. Under the **Capabilities** tab, ensure that both **Steps** are enabled for **Push Notifications**. 

1. If your PCF deployment does not have a properly signed SSL certificate, add an exception domain to the `info.plist` file:
	1. Select **App Transport Security Settings** > **Exception Domains** and enter your system domain. 

## <a id="run"></a> Run the App on your Device
<!-- The following invisible link puts this section in the subnav on the left of the page -->
<a href="heartbeat-ios.html#run" class="subnav" style="display: none;">Run the App on your Device
</a>

1. In the Xcode navbar, select **Preferences**. 

1. Select the **Accounts** tab. 

1. Select your Apple ID. 

1. Click **View Details**. 

1. Under provisioning profiles, download the provisioning profile you created. 

1. At the top of the Xcode window, select the device icon and choose your device. 

1. Click the play button to build and run the app on your device. Resolve any errors. 

